# This workflow will build and push a node.js application to an Azure Web App when a commit is pushed to your default branch.
#
# This workflow assumes you have already created the target Azure App Service web app.
# For instructions see https://docs.microsoft.com/en-us/azure/app-service/quickstart-nodejs?tabs=linux&pivots=development-environment-cli
#
# To configure this workflow:
#
# 1. Download the Publish Profile for your Azure Web App. You can download this file from the Overview page of your Web App in the Azure Portal.
#    For more information: https://docs.microsoft.com/en-us/azure/app-service/deploy-github-actions?tabs=applevel#generate-deployment-credentials
#
# 2. Create a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE, paste the publish profile contents as the value of the secret.
#    For instructions on obtaining the publish profile see: https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
#
# 3. Change the value for the AZURE_WEBAPP_NAME. Optionally, change the AZURE_WEBAPP_PACKAGE_PATH and NODE_VERSION environment variables below.
#
# For more information on GitHub Actions for Azure: https://github.com/Azure/Actions
# For more information on the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# For more samples to get started with GitHub Action workflows to deploy to Azure: https://github.com/Azure/actions-workflow-samples

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: your-app-name    # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root
  NODE_VERSION: '14.x'                # set this to the node version to use

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: npm install, build, and test
      run: |
        npm install
        npm run build --if-present
        npm run test --if-present

    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v3
      with:
        name: node-app
        path: .

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v3
      with:
        name: node-app

    - name: 'Deploy to Azure WebApp'
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
            - adı: Java JDK Kurulumu
  kullanımlar: actions/setup-java@v4.2.2
  ile:
    # Kurulacak Java sürümü. Tüm veya yarıyıl Java sürümünü alır. README dosyasında desteklenen sözdiziminin örneklerine bakın
    java-version: # isteğe bağlı
    # `.java-version` dosyasının yolu. README dosyasında desteklenen sözdiziminin örneklerine bakın
    java-version-file: # isteğe bağlı
    # Java dağıtımı. README dosyasında desteklenen dağıtımların listesine bakın
    dağıtım:
    # Paket türü (jdk, jre, jdk+fx, jre+fx)
    java-package: # isteğe bağlı, varsayılan jdk'dır
    # Paketin mimarisi (varsayılan olarak eylem yürütücüsünün mimarisidir)
    mimari: # isteğe bağlı
    # Sıkıştırılmış JDK'nın bulunduğu yol
    jdkFile: # isteğe bağlı
    # Eylemin sürüm özelliğini karşılayan en son kullanılabilir sürümü kontrol etmesini istiyorsanız bu seçeneği ayarlayın
    son durumu kontrol et: # isteğe bağlı
    # Pom.xml dosyasındaki distributionManagement deposunun kimliği. Varsayılan `github`'dır
    server-id: # isteğe bağlı, varsayılan github'dır
    # Apache Maven deposuna kimlik doğrulaması için kullanıcı adı için ortam değişkeni adı. Varsayılan $GITHUB_ACTOR'dur
    server-username: # isteğe bağlı, varsayılan GITHUB_ACTOR'dur
    # Apache Maven deposuna kimlik doğrulaması için parola veya belirteç için ortam değişkeni adı. Varsayılan $GITHUB_TOKEN'dır
    sunucu-şifresi: # isteğe bağlı, varsayılan GITHUB_TOKEN'dır
    # settings.xml dosyasının yazılacağı yol. Varsayılan ~/.m2'dir.
    ayarlar-yolu: # isteğe bağlı
    # Varsa settings.xml dosyasının üzerine yaz. Varsayılan "true"dur.
    overwrite-settings: # isteğe bağlı, varsayılanı true'dur
    # İçe aktarılacak GPG özel anahtarı. Varsayılan boş dizedir.
    gpg-private-key: # isteğe bağlı
    # GPG özel anahtar parolası için ortam değişkeni adı. Varsayılan $GPG_PASSPHRASE'dir.
    gpg-passphrase: # isteğe bağlı
    # Bağımlılıkları önbelleğe almak için yapı platformunun adı. "maven", "gradle" veya "sbt" olabilir.
    önbellek: # isteğe bağlı
    # Bağımlılık dosyasının yolu: pom.xml, build.gradle, build.sbt, vb. Bu seçenek `cache` seçeneğiyle birlikte kullanılabilir. Bu seçenek atlanırsa, eylem bağımlılık dosyasını tüm depoda arar. Bu seçenek, birden fazla bağımlılığı önbelleğe almak için joker karakterleri ve bir dosya adı listesini destekler.
    önbellek-bağımlılık-yolu: # isteğe bağlı
    # İş durumunu iş sonrası adımına geçirmek için geçici çözüm. Bu değişken manuel ayarlama için tasarlanmamıştır
    iş durumu: # isteğe bağlı, varsayılan ${{ job.status }}
    # Github.com'da barındırılan sürüm bildirimlerini (örneğin Microsoft Build of OpenJDK) getirirken kimlik doğrulaması için kullanılan belirteç. Bu eylemi github.com'da çalıştırırken varsayılan değer yeterlidir. GHES'te çalıştırırken, hız sınırlaması yaşıyorsanız github.com için kişisel bir erişim belirteci geçirebilirsiniz.
    token: # isteğe bağlı, varsayılan ${{ github.server_url == 'https://github.com' && github.token || '' }}
    # Varsayılan "${distribution}_${java-version}" adı istenmiyorsa Maven Toolchain ID'sinin adı. Gelişmiş Kullanım dosyasında desteklenen sözdiziminin örneklerine bakın
    mvn-toolchain-id: # isteğe bağlı
    # Varsayılan "${distribution}" adı istenmiyorsa Maven Toolchain Satıcısının adı. Gelişmiş Kullanım dosyasında desteklenen sözdiziminin örneklerine bakın
    mvn-toolchain-vendor: # isteğe bağlı
            - adı: Java JDK Kurulumu
  kullanımlar: actions/setup-java@v4.2.2
  ile:
    # Kurulacak Java sürümü. Tüm veya yarıyıl Java sürümünü alır. README dosyasında desteklenen sözdiziminin örneklerine bakın
    java-version: # isteğe bağlı
    # `.java-version` dosyasının yolu. README dosyasında desteklenen sözdiziminin örneklerine bakın
    java-version-file: # isteğe bağlı
    # Java dağıtımı. README dosyasında desteklenen dağıtımların listesine bakın
    dağıtım:
    # Paket türü (jdk, jre, jdk+fx, jre+fx)
    java-package: # isteğe bağlı, varsayılan jdk'dır
    # Paketin mimarisi (varsayılan olarak eylem yürütücüsünün mimarisidir)
    mimari: # isteğe bağlı
    # Sıkıştırılmış JDK'nın bulunduğu yol
    jdkFile: # isteğe bağlı
    # Eylemin sürüm özelliğini karşılayan en son kullanılabilir sürümü kontrol etmesini istiyorsanız bu seçeneği ayarlayın
    son durumu kontrol et: # isteğe bağlı
    # Pom.xml dosyasındaki distributionManagement deposunun kimliği. Varsayılan `github`'dır
    server-id: # isteğe bağlı, varsayılan github'dır
    # Apache Maven deposuna kimlik doğrulaması için kullanıcı adı için ortam değişkeni adı. Varsayılan $GITHUB_ACTOR'dur
    server-username: # isteğe bağlı, varsayılan GITHUB_ACTOR'dur
    # Apache Maven deposuna kimlik doğrulaması için parola veya belirteç için ortam değişkeni adı. Varsayılan $GITHUB_TOKEN'dır
    sunucu-şifresi: # isteğe bağlı, varsayılan GITHUB_TOKEN'dır
    # settings.xml dosyasının yazılacağı yol. Varsayılan ~/.m2'dir.
    ayarlar-yolu: # isteğe bağlı
    # Varsa settings.xml dosyasının üzerine yaz. Varsayılan "true"dur.
    overwrite-settings: # isteğe bağlı, varsayılanı true'dur
    # İçe aktarılacak GPG özel anahtarı. Varsayılan boş dizedir.
    gpg-private-key: # isteğe bağlı
    # GPG özel anahtar parolası için ortam değişkeni adı. Varsayılan $GPG_PASSPHRASE'dir.
    gpg-passphrase: # isteğe bağlı
    # Bağımlılıkları önbelleğe almak için yapı platformunun adı. "maven", "gradle" veya "sbt" olabilir.
    önbellek: # isteğe bağlı
    # Bağımlılık dosyasının yolu: pom.xml, build.gradle, build.sbt, vb. Bu seçenek `cache` seçeneğiyle birlikte kullanılabilir. Bu seçenek atlanırsa, eylem bağımlılık dosyasını tüm depoda arar. Bu seçenek, birden fazla bağımlılığı önbelleğe almak için joker karakterleri ve bir dosya adı listesini destekler.
    önbellek-bağımlılık-yolu: # isteğe bağlı
    # İş durumunu iş sonrası adımına geçirmek için geçici çözüm. Bu değişken manuel ayarlama için tasarlanmamıştır
    iş durumu: # isteğe bağlı, varsayılan ${{ job.status }}
    # Github.com'da barındırılan sürüm bildirimlerini (örneğin Microsoft Build of OpenJDK) getirirken kimlik doğrulaması için kullanılan belirteç. Bu eylemi github.com'da çalıştırırken varsayılan değer yeterlidir. GHES'te çalıştırırken, hız sınırlaması yaşıyorsanız github.com için kişisel bir erişim belirteci geçirebilirsiniz.
    token: # isteğe bağlı, varsayılan ${{ github.server_url == 'https://github.com' && github.token || '' }}
    # Varsayılan "${distribution}_${java-version}" adı istenmiyorsa Maven Toolchain ID'sinin adı. Gelişmiş Kullanım dosyasında desteklenen sözdiziminin örneklerine bakın
    mvn-toolchain-id: # isteğe bağlı
    # Varsayılan "${distribution}" adı istenmiyorsa Maven Toolchain Satıcısının adı. Gelişmiş Kullanım dosyasında desteklenen sözdiziminin örneklerine bakın
    mvn-toolchain-vendor: # isteğe bağlı
          
